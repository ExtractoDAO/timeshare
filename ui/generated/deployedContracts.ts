const deployedContracts = {
  "31337": [
    {
      name: "localhost",
      chainId: "31337",
      contracts: {
        USDT: {
          address: "0x5FbDB2315678afecb367f032d93F642f64180aa3",
          abi: [
            {
              inputs: [
                { internalType: "string", name: "_symbol", type: "string" },
                { internalType: "uint256", name: "initialSupply", type: "uint256" },
                { internalType: "uint8", name: "_decimals", type: "uint8" },
              ],
              stateMutability: "nonpayable",
              type: "constructor",
            },
            {
              anonymous: false,
              inputs: [
                { indexed: true, internalType: "address", name: "owner", type: "address" },
                { indexed: true, internalType: "address", name: "spender", type: "address" },
                { indexed: false, internalType: "uint256", name: "amount", type: "uint256" },
              ],
              name: "Approval",
              type: "event",
            },
            {
              anonymous: false,
              inputs: [
                { indexed: true, internalType: "address", name: "from", type: "address" },
                { indexed: true, internalType: "address", name: "to", type: "address" },
                { indexed: false, internalType: "uint256", name: "amount", type: "uint256" },
              ],
              name: "Transfer",
              type: "event",
            },
            {
              inputs: [
                { internalType: "address", name: "", type: "address" },
                { internalType: "address", name: "", type: "address" },
              ],
              name: "allowance",
              outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
              stateMutability: "view",
              type: "function",
            },
            {
              inputs: [
                { internalType: "address", name: "spender", type: "address" },
                { internalType: "uint256", name: "amount", type: "uint256" },
              ],
              name: "approve",
              outputs: [{ internalType: "bool", name: "", type: "bool" }],
              stateMutability: "nonpayable",
              type: "function",
            },
            {
              inputs: [{ internalType: "address", name: "", type: "address" }],
              name: "balanceOf",
              outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
              stateMutability: "view",
              type: "function",
            },
            {
              inputs: [],
              name: "decimals",
              outputs: [{ internalType: "uint8", name: "", type: "uint8" }],
              stateMutability: "view",
              type: "function",
            },
            {
              inputs: [],
              name: "name",
              outputs: [{ internalType: "string", name: "", type: "string" }],
              stateMutability: "view",
              type: "function",
            },
            {
              inputs: [],
              name: "symbol",
              outputs: [{ internalType: "string", name: "", type: "string" }],
              stateMutability: "view",
              type: "function",
            },
            {
              inputs: [],
              name: "totalSupply",
              outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
              stateMutability: "view",
              type: "function",
            },
            {
              inputs: [
                { internalType: "address", name: "to", type: "address" },
                { internalType: "uint256", name: "amount", type: "uint256" },
              ],
              name: "transfer",
              outputs: [{ internalType: "bool", name: "", type: "bool" }],
              stateMutability: "nonpayable",
              type: "function",
            },
            {
              inputs: [
                { internalType: "address", name: "from", type: "address" },
                { internalType: "address", name: "to", type: "address" },
                { internalType: "uint256", name: "amount", type: "uint256" },
              ],
              name: "transferFrom",
              outputs: [{ internalType: "bool", name: "", type: "bool" }],
              stateMutability: "nonpayable",
              type: "function",
            },
          ],
        },
        USDC: {
          address: "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
          abi: [
            {
              inputs: [
                { internalType: "string", name: "_symbol", type: "string" },
                { internalType: "uint256", name: "initialSupply", type: "uint256" },
                { internalType: "uint8", name: "_decimals", type: "uint8" },
              ],
              stateMutability: "nonpayable",
              type: "constructor",
            },
            {
              anonymous: false,
              inputs: [
                { indexed: true, internalType: "address", name: "owner", type: "address" },
                { indexed: true, internalType: "address", name: "spender", type: "address" },
                { indexed: false, internalType: "uint256", name: "amount", type: "uint256" },
              ],
              name: "Approval",
              type: "event",
            },
            {
              anonymous: false,
              inputs: [
                { indexed: true, internalType: "address", name: "from", type: "address" },
                { indexed: true, internalType: "address", name: "to", type: "address" },
                { indexed: false, internalType: "uint256", name: "amount", type: "uint256" },
              ],
              name: "Transfer",
              type: "event",
            },
            {
              inputs: [
                { internalType: "address", name: "", type: "address" },
                { internalType: "address", name: "", type: "address" },
              ],
              name: "allowance",
              outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
              stateMutability: "view",
              type: "function",
            },
            {
              inputs: [
                { internalType: "address", name: "spender", type: "address" },
                { internalType: "uint256", name: "amount", type: "uint256" },
              ],
              name: "approve",
              outputs: [{ internalType: "bool", name: "", type: "bool" }],
              stateMutability: "nonpayable",
              type: "function",
            },
            {
              inputs: [{ internalType: "address", name: "", type: "address" }],
              name: "balanceOf",
              outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
              stateMutability: "view",
              type: "function",
            },
            {
              inputs: [],
              name: "decimals",
              outputs: [{ internalType: "uint8", name: "", type: "uint8" }],
              stateMutability: "view",
              type: "function",
            },
            {
              inputs: [],
              name: "name",
              outputs: [{ internalType: "string", name: "", type: "string" }],
              stateMutability: "view",
              type: "function",
            },
            {
              inputs: [],
              name: "symbol",
              outputs: [{ internalType: "string", name: "", type: "string" }],
              stateMutability: "view",
              type: "function",
            },
            {
              inputs: [],
              name: "totalSupply",
              outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
              stateMutability: "view",
              type: "function",
            },
            {
              inputs: [
                { internalType: "address", name: "to", type: "address" },
                { internalType: "uint256", name: "amount", type: "uint256" },
              ],
              name: "transfer",
              outputs: [{ internalType: "bool", name: "", type: "bool" }],
              stateMutability: "nonpayable",
              type: "function",
            },
            {
              inputs: [
                { internalType: "address", name: "from", type: "address" },
                { internalType: "address", name: "to", type: "address" },
                { internalType: "uint256", name: "amount", type: "uint256" },
              ],
              name: "transferFrom",
              outputs: [{ internalType: "bool", name: "", type: "bool" }],
              stateMutability: "nonpayable",
              type: "function",
            },
          ],
        },
        Commodity: {
          address: "0xCf7Ed3AccA5a467e9e704C703E8D87F634fB0Fc9",
          abi: [
            { inputs: [], stateMutability: "nonpayable", type: "constructor" },
            {
              inputs: [{ internalType: "address", name: "future", type: "address" }],
              name: "BurnContract",
              type: "error",
            },
            { inputs: [], name: "Deactivated", type: "error" },
            {
              inputs: [{ internalType: "address", name: "future", type: "address" }],
              name: "FutureNotExists",
              type: "error",
            },
            {
              inputs: [
                { internalType: "uint256", name: "need", type: "uint256" },
                { internalType: "uint256", name: "have", type: "uint256" },
                { internalType: "uint256", name: "diff", type: "uint256" },
              ],
              name: "InsufficientAllowance",
              type: "error",
            },
            {
              inputs: [
                { internalType: "uint256", name: "yourAmount", type: "uint256" },
                { internalType: "uint256", name: "minimumAmount", type: "uint256" },
              ],
              name: "InsufficientAmount",
              type: "error",
            },
            {
              inputs: [{ internalType: "address", name: "token", type: "address" }],
              name: "InvalidToken",
              type: "error",
            },
            {
              inputs: [
                { internalType: "uint8", name: "minimum", type: "uint8" },
                { internalType: "uint8", name: "maximum", type: "uint8" },
              ],
              name: "InvalidYield",
              type: "error",
            },
            { inputs: [], name: "NoReentrancy", type: "error" },
            {
              inputs: [
                { internalType: "uint256", name: "x", type: "uint256" },
                { internalType: "uint256", name: "y", type: "uint256" },
              ],
              name: "PRBMath__MulDiv18Overflow",
              type: "error",
            },
            {
              inputs: [
                { internalType: "uint256", name: "x", type: "uint256" },
                { internalType: "uint256", name: "y", type: "uint256" },
                { internalType: "uint256", name: "denominator", type: "uint256" },
              ],
              name: "PRBMath__MulDivOverflow",
              type: "error",
            },
            {
              inputs: [
                { internalType: "address", name: "from", type: "address" },
                { internalType: "address", name: "to", type: "address" },
                { internalType: "uint256", name: "amount", type: "uint256" },
              ],
              name: "PaymentFailed",
              type: "error",
            },
            {
              inputs: [
                { internalType: "uint256", name: "tokensLength", type: "uint256" },
                { internalType: "uint256", name: "decimalsLength", type: "uint256" },
              ],
              name: "TokensDecimalsLengthError",
              type: "error",
            },
            { inputs: [], name: "Unauthorized", type: "error" },
            {
              inputs: [
                { internalType: "uint256", name: "kilos", type: "uint256" },
                { internalType: "uint256", name: "yourAmount", type: "uint256" },
                { internalType: "uint256", name: "diff", type: "uint256" },
              ],
              name: "UnavailableKilos",
              type: "error",
            },
            {
              inputs: [{ internalType: "address", name: "investor", type: "address" }],
              name: "ZeroAddress",
              type: "error",
            },
            {
              anonymous: false,
              inputs: [
                { indexed: false, internalType: "address", name: "future", type: "address" },
                { indexed: false, internalType: "address", name: "owner", type: "address" },
                { indexed: false, internalType: "uint256", name: "amount", type: "uint256" },
                { indexed: false, internalType: "uint256", name: "locktime", type: "uint256" },
              ],
              name: "FutureCreated",
              type: "event",
            },
            {
              anonymous: false,
              inputs: [
                { indexed: false, internalType: "uint256", name: "amount", type: "uint256" },
                { indexed: false, internalType: "address", name: "investor", type: "address" },
              ],
              name: "TokensMinted",
              type: "event",
            },
            {
              inputs: [
                { internalType: "address", name: "newToken", type: "address" },
                { internalType: "uint8", name: "decimal", type: "uint8" },
              ],
              name: "addTokens",
              outputs: [],
              stateMutability: "nonpayable",
              type: "function",
            },
            {
              inputs: [
                { internalType: "address", name: "tokenAddress", type: "address" },
                { internalType: "uint256", name: "amount", type: "uint256" },
              ],
              name: "createFuture",
              outputs: [
                { internalType: "address", name: "future", type: "address" },
                { internalType: "uint256", name: "kg", type: "uint256" },
              ],
              stateMutability: "nonpayable",
              type: "function",
            },
            {
              inputs: [{ internalType: "address", name: "noauth", type: "address" }],
              name: "delTokens",
              outputs: [],
              stateMutability: "nonpayable",
              type: "function",
            },
            {
              inputs: [],
              name: "getActivated",
              outputs: [{ internalType: "bool", name: "activated", type: "bool" }],
              stateMutability: "view",
              type: "function",
            },
            {
              inputs: [],
              name: "getAllowedTokens",
              outputs: [{ internalType: "address[]", name: "tokens", type: "address[]" }],
              stateMutability: "view",
              type: "function",
            },
            {
              inputs: [],
              name: "getAllowedTokensLength",
              outputs: [{ internalType: "uint256", name: "length", type: "uint256" }],
              stateMutability: "view",
              type: "function",
            },
            {
              inputs: [],
              name: "getBuyPrice",
              outputs: [{ internalType: "uint256", name: "buyPrice", type: "uint256" }],
              stateMutability: "view",
              type: "function",
            },
            {
              inputs: [],
              name: "getCOW",
              outputs: [{ internalType: "contract COW", name: "cow", type: "address" }],
              stateMutability: "view",
              type: "function",
            },
            {
              inputs: [{ internalType: "address", name: "future", type: "address" }],
              name: "getContractByAddress",
              outputs: [
                { internalType: "address", name: "investor", type: "address" },
                { internalType: "address", name: "_future", type: "address" },
                { internalType: "uint256", name: "kg", type: "uint256" },
                { internalType: "bool", name: "burn", type: "bool" },
              ],
              stateMutability: "view",
              type: "function",
            },
            {
              inputs: [{ internalType: "address", name: "investor", type: "address" }],
              name: "getContractsByInvestor",
              outputs: [
                {
                  components: [
                    { internalType: "address", name: "investor", type: "address" },
                    { internalType: "address", name: "future", type: "address" },
                    { internalType: "uint256", name: "commodityAmount", type: "uint256" },
                    { internalType: "bool", name: "burn", type: "bool" },
                  ],
                  internalType: "struct CommodityStorageLib.Contract[]",
                  name: "contractsInvestor",
                  type: "tuple[]",
                },
              ],
              stateMutability: "view",
              type: "function",
            },
            {
              inputs: [],
              name: "getController",
              outputs: [{ internalType: "address", name: "controller", type: "address" }],
              stateMutability: "view",
              type: "function",
            },
            {
              inputs: [],
              name: "getDao",
              outputs: [{ internalType: "address", name: "dao", type: "address" }],
              stateMutability: "view",
              type: "function",
            },
            {
              inputs: [],
              name: "getFullDrawer",
              outputs: [{ internalType: "address[]", name: "drawer", type: "address[]" }],
              stateMutability: "view",
              type: "function",
            },
            {
              inputs: [],
              name: "getLocktime",
              outputs: [{ internalType: "uint256", name: "locktime", type: "uint256" }],
              stateMutability: "view",
              type: "function",
            },
            {
              inputs: [],
              name: "getSellPrice",
              outputs: [{ internalType: "uint256", name: "sellPrice", type: "uint256" }],
              stateMutability: "view",
              type: "function",
            },
            {
              inputs: [],
              name: "getTotalSupplyKG",
              outputs: [{ internalType: "uint256", name: "totalSupplyKg", type: "uint256" }],
              stateMutability: "view",
              type: "function",
            },
            {
              inputs: [],
              name: "getYieldFarming",
              outputs: [{ internalType: "uint256", name: "yieldFarming", type: "uint256" }],
              stateMutability: "view",
              type: "function",
            },
            {
              inputs: [
                { internalType: "address[]", name: "tokens", type: "address[]" },
                { internalType: "uint8[]", name: "decimals", type: "uint8[]" },
                { internalType: "uint256", name: "locktime", type: "uint256" },
                { internalType: "uint256", name: "commoditySupply", type: "uint256" },
                { internalType: "uint256", name: "buyPrice", type: "uint256" },
                { internalType: "uint256", name: "sellPrice", type: "uint256" },
                { internalType: "uint8", name: "yieldFarming", type: "uint8" },
                { internalType: "bool", name: "active", type: "bool" },
                { internalType: "address", name: "dao", type: "address" },
                { internalType: "address", name: "cow", type: "address" },
              ],
              name: "init",
              outputs: [{ internalType: "bool", name: "result", type: "bool" }],
              stateMutability: "nonpayable",
              type: "function",
            },
            {
              inputs: [
                { internalType: "uint256", name: "commodityAmount", type: "uint256" },
                { internalType: "address", name: "investor", type: "address" },
              ],
              name: "mintToken",
              outputs: [],
              stateMutability: "nonpayable",
              type: "function",
            },
            {
              inputs: [{ internalType: "address", name: "newCow", type: "address" }],
              name: "setCOW",
              outputs: [],
              stateMutability: "nonpayable",
              type: "function",
            },
            {
              inputs: [{ internalType: "address", name: "newController", type: "address" }],
              name: "setController",
              outputs: [],
              stateMutability: "nonpayable",
              type: "function",
            },
            {
              inputs: [{ internalType: "address", name: "newDAO", type: "address" }],
              name: "setDAO",
              outputs: [],
              stateMutability: "nonpayable",
              type: "function",
            },
            {
              inputs: [{ internalType: "bool", name: "state", type: "bool" }],
              name: "updateActive",
              outputs: [],
              stateMutability: "nonpayable",
              type: "function",
            },
            {
              inputs: [{ internalType: "uint256", name: "newBuyPrice", type: "uint256" }],
              name: "updateBuyPrice",
              outputs: [],
              stateMutability: "nonpayable",
              type: "function",
            },
            {
              inputs: [{ internalType: "uint256", name: "newLockTime", type: "uint256" }],
              name: "updateLockTime",
              outputs: [],
              stateMutability: "nonpayable",
              type: "function",
            },
            {
              inputs: [{ internalType: "uint256", name: "newSellPrice", type: "uint256" }],
              name: "updateSellPrice",
              outputs: [],
              stateMutability: "nonpayable",
              type: "function",
            },
            {
              inputs: [{ internalType: "uint8", name: "newYieldFarming", type: "uint8" }],
              name: "updateYieldFarming",
              outputs: [],
              stateMutability: "nonpayable",
              type: "function",
            },
          ],
        },
        Diamond: {
          address: "0xCf7Ed3AccA5a467e9e704C703E8D87F634fB0Fc9",
          abi: [
            { inputs: [], stateMutability: "nonpayable", type: "constructor" },
            {
              inputs: [{ internalType: "bytes4", name: "_selector", type: "bytes4" }],
              name: "CannotAddFunctionToDiamondThatAlreadyExists",
              type: "error",
            },
            {
              inputs: [{ internalType: "address", name: "facetAddress", type: "address" }],
              name: "CannotRemoveImmutableFunction",
              type: "error",
            },
            {
              inputs: [
                { internalType: "address", name: "facetAddress", type: "address" },
                { internalType: "string", name: "debugMessage", type: "string" },
              ],
              name: "FacetZeroAddress",
              type: "error",
            },
            { inputs: [], name: "FnSelectorsEmpty", type: "error" },
            {
              inputs: [{ internalType: "bytes4", name: "fnSelector", type: "bytes4" }],
              name: "FunctionNotFound",
              type: "error",
            },
            {
              inputs: [{ internalType: "uint8", name: "action", type: "uint8" }],
              name: "IncorrectAction",
              type: "error",
            },
            {
              inputs: [
                { internalType: "address", name: "_initializationContractAddress", type: "address" },
                { internalType: "bytes", name: "_calldata", type: "bytes" },
              ],
              name: "InitializationFunctionReverted",
              type: "error",
            },
            { inputs: [], name: "NoAuthorized", type: "error" },
            {
              inputs: [
                { internalType: "address", name: "_contract", type: "address" },
                { internalType: "string", name: "debugMessage", type: "string" },
              ],
              name: "NoBytecodeAtAddress",
              type: "error",
            },
            { inputs: [], name: "ZeroAddress", type: "error" },
            { stateMutability: "payable", type: "fallback" },
            {
              inputs: [
                {
                  components: [
                    { internalType: "address", name: "facetAddress", type: "address" },
                    { internalType: "bytes4[]", name: "fnSelectors", type: "bytes4[]" },
                    { internalType: "enum Action", name: "action", type: "uint8" },
                  ],
                  internalType: "struct Facet[]",
                  name: "_diamondCut",
                  type: "tuple[]",
                },
                { internalType: "address", name: "_init", type: "address" },
                { internalType: "bytes", name: "_calldata", type: "bytes" },
              ],
              name: "diamondCut",
              outputs: [],
              stateMutability: "nonpayable",
              type: "function",
            },
            {
              inputs: [{ internalType: "bytes4", name: "fnSelector", type: "bytes4" }],
              name: "facetAddress",
              outputs: [{ internalType: "address", name: "facetAddress_", type: "address" }],
              stateMutability: "view",
              type: "function",
            },
            {
              inputs: [],
              name: "facetAddresses",
              outputs: [{ internalType: "address[]", name: "facetAddresses_", type: "address[]" }],
              stateMutability: "view",
              type: "function",
            },
            {
              inputs: [{ internalType: "address", name: "facet_", type: "address" }],
              name: "facetFunctionSelectors",
              outputs: [{ internalType: "bytes4[]", name: "fnSelectors", type: "bytes4[]" }],
              stateMutability: "view",
              type: "function",
            },
            {
              inputs: [],
              name: "facets",
              outputs: [
                {
                  components: [
                    { internalType: "address", name: "facetAddress", type: "address" },
                    { internalType: "bytes4[]", name: "fnSelectors", type: "bytes4[]" },
                    { internalType: "enum Action", name: "action", type: "uint8" },
                  ],
                  internalType: "struct Facet[]",
                  name: "facets_",
                  type: "tuple[]",
                },
              ],
              stateMutability: "view",
              type: "function",
            },
            { stateMutability: "payable", type: "receive" },
          ],
        },
        Dex: {
          address: "0xCf7Ed3AccA5a467e9e704C703E8D87F634fB0Fc9",
          abi: [
            { inputs: [], stateMutability: "nonpayable", type: "constructor" },
            {
              inputs: [{ internalType: "address", name: "future", type: "address" }],
              name: "BurnContract",
              type: "error",
            },
            { inputs: [], name: "FutureAlreadyListed", type: "error" },
            {
              inputs: [{ internalType: "address", name: "future", type: "address" }],
              name: "FutureNotExists",
              type: "error",
            },
            {
              inputs: [
                { internalType: "uint256", name: "need", type: "uint256" },
                { internalType: "uint256", name: "have", type: "uint256" },
                { internalType: "uint256", name: "diff", type: "uint256" },
              ],
              name: "InsufficientAllowance",
              type: "error",
            },
            { inputs: [], name: "InvalidAmount", type: "error" },
            { inputs: [], name: "InvalidCommodityAmount", type: "error" },
            {
              inputs: [
                { internalType: "address", name: "future", type: "address" },
                { internalType: "address", name: "investor", type: "address" },
              ],
              name: "InvalidFutureOwnership",
              type: "error",
            },
            {
              inputs: [
                { internalType: "address", name: "investor", type: "address" },
                { internalType: "bytes32", name: "orderId", type: "bytes32" },
              ],
              name: "InvalidOrderOwnership",
              type: "error",
            },
            {
              inputs: [{ internalType: "address", name: "token", type: "address" }],
              name: "InvalidToken",
              type: "error",
            },
            {
              inputs: [{ internalType: "bytes32", name: "id", type: "bytes32" }],
              name: "OrderNotFound",
              type: "error",
            },
            {
              inputs: [
                { internalType: "address", name: "from", type: "address" },
                { internalType: "address", name: "to", type: "address" },
                { internalType: "uint256", name: "amount", type: "uint256" },
              ],
              name: "PaymentFailed",
              type: "error",
            },
            { inputs: [], name: "SelfTradingError", type: "error" },
            {
              inputs: [{ internalType: "address", name: "investor", type: "address" }],
              name: "ZeroAddress",
              type: "error",
            },
            {
              anonymous: false,
              inputs: [
                { indexed: false, internalType: "bytes32", name: "id", type: "bytes32" },
                { indexed: true, internalType: "uint256", name: "amount", type: "uint256" },
                { indexed: false, internalType: "uint256", name: "commodityAmount", type: "uint256" },
              ],
              name: "BuyOrder",
              type: "event",
            },
            {
              anonymous: false,
              inputs: [
                { indexed: false, internalType: "bytes32", name: "id", type: "bytes32" },
                { indexed: true, internalType: "uint256", name: "amount", type: "uint256" },
                { indexed: false, internalType: "uint256", name: "commodityAmount", type: "uint256" },
                { indexed: false, internalType: "enum DexStorageLib.OrderType", name: "side", type: "uint8" },
              ],
              name: "CancelOrder",
              type: "event",
            },
            {
              anonymous: false,
              inputs: [
                { indexed: false, internalType: "address", name: "oldInvestor", type: "address" },
                { indexed: false, internalType: "address", name: "newInvestor", type: "address" },
                { indexed: false, internalType: "address", name: "future", type: "address" },
                { indexed: true, internalType: "uint256", name: "amount", type: "uint256" },
                { indexed: false, internalType: "uint256", name: "commodityAmount", type: "uint256" },
              ],
              name: "MatchOrder",
              type: "event",
            },
            {
              anonymous: false,
              inputs: [
                { indexed: false, internalType: "bytes32", name: "id", type: "bytes32" },
                { indexed: true, internalType: "address", name: "future", type: "address" },
                { indexed: false, internalType: "uint256", name: "amount", type: "uint256" },
                { indexed: false, internalType: "uint256", name: "commodityAmount", type: "uint256" },
              ],
              name: "SellOrder",
              type: "event",
            },
            {
              inputs: [
                { internalType: "address", name: "tokenAddress", type: "address" },
                { internalType: "uint256", name: "commodityAmount", type: "uint256" },
                { internalType: "uint256", name: "amount", type: "uint256" },
                { internalType: "uint256", name: "randNonce", type: "uint256" },
              ],
              name: "buyOrder",
              outputs: [{ internalType: "bytes32", name: "id", type: "bytes32" }],
              stateMutability: "nonpayable",
              type: "function",
            },
            {
              inputs: [],
              name: "buyOrders",
              outputs: [
                {
                  components: [
                    { internalType: "uint256", name: "commodityAmount", type: "uint256" },
                    { internalType: "uint256", name: "amount", type: "uint256" },
                    { internalType: "address", name: "tokenAddress", type: "address" },
                    { internalType: "address", name: "future", type: "address" },
                    { internalType: "address", name: "investor", type: "address" },
                    { internalType: "enum DexStorageLib.OrderType", name: "typed", type: "uint8" },
                    { internalType: "bytes32", name: "id", type: "bytes32" },
                  ],
                  internalType: "struct DexStorageLib.Order[]",
                  name: "",
                  type: "tuple[]",
                },
              ],
              stateMutability: "view",
              type: "function",
            },
            {
              inputs: [{ internalType: "bytes32", name: "orderId", type: "bytes32" }],
              name: "cancelOrder",
              outputs: [],
              stateMutability: "nonpayable",
              type: "function",
            },
            {
              inputs: [],
              name: "orderBook",
              outputs: [
                {
                  components: [
                    { internalType: "uint256", name: "commodityAmount", type: "uint256" },
                    { internalType: "uint256", name: "amount", type: "uint256" },
                    { internalType: "address", name: "tokenAddress", type: "address" },
                    { internalType: "address", name: "future", type: "address" },
                    { internalType: "address", name: "investor", type: "address" },
                    { internalType: "enum DexStorageLib.OrderType", name: "typed", type: "uint8" },
                    { internalType: "bytes32", name: "id", type: "bytes32" },
                  ],
                  internalType: "struct DexStorageLib.Order[]",
                  name: "",
                  type: "tuple[]",
                },
              ],
              stateMutability: "view",
              type: "function",
            },
            {
              inputs: [
                { internalType: "address", name: "investor", type: "address" },
                { internalType: "uint256", name: "amount", type: "uint256" },
              ],
              name: "sellOrder",
              outputs: [{ internalType: "bytes32", name: "id", type: "bytes32" }],
              stateMutability: "nonpayable",
              type: "function",
            },
            {
              inputs: [],
              name: "sellOrders",
              outputs: [
                {
                  components: [
                    { internalType: "uint256", name: "commodityAmount", type: "uint256" },
                    { internalType: "uint256", name: "amount", type: "uint256" },
                    { internalType: "address", name: "tokenAddress", type: "address" },
                    { internalType: "address", name: "future", type: "address" },
                    { internalType: "address", name: "investor", type: "address" },
                    { internalType: "enum DexStorageLib.OrderType", name: "typed", type: "uint8" },
                    { internalType: "bytes32", name: "id", type: "bytes32" },
                  ],
                  internalType: "struct DexStorageLib.Order[]",
                  name: "",
                  type: "tuple[]",
                },
              ],
              stateMutability: "view",
              type: "function",
            },
          ],
        },
        COW: {
          address: "0x5FC8d32690cc91D4c39d9d3abcBD16989F875707",
          abi: [
            { inputs: [], stateMutability: "nonpayable", type: "constructor" },
            {
              anonymous: false,
              inputs: [
                { indexed: true, internalType: "address", name: "owner", type: "address" },
                { indexed: true, internalType: "address", name: "spender", type: "address" },
                { indexed: false, internalType: "uint256", name: "amount", type: "uint256" },
              ],
              name: "Approval",
              type: "event",
            },
            {
              anonymous: false,
              inputs: [
                { indexed: true, internalType: "address", name: "from", type: "address" },
                { indexed: true, internalType: "address", name: "to", type: "address" },
                { indexed: false, internalType: "uint256", name: "amount", type: "uint256" },
              ],
              name: "Transfer",
              type: "event",
            },
            {
              inputs: [
                { internalType: "address", name: "", type: "address" },
                { internalType: "address", name: "", type: "address" },
              ],
              name: "allowance",
              outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
              stateMutability: "view",
              type: "function",
            },
            {
              inputs: [
                { internalType: "address", name: "spender", type: "address" },
                { internalType: "uint256", name: "amount", type: "uint256" },
              ],
              name: "approve",
              outputs: [{ internalType: "bool", name: "", type: "bool" }],
              stateMutability: "nonpayable",
              type: "function",
            },
            {
              inputs: [{ internalType: "address", name: "", type: "address" }],
              name: "balanceOf",
              outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
              stateMutability: "view",
              type: "function",
            },
            {
              inputs: [],
              name: "decimals",
              outputs: [{ internalType: "uint8", name: "", type: "uint8" }],
              stateMutability: "view",
              type: "function",
            },
            {
              inputs: [],
              name: "name",
              outputs: [{ internalType: "string", name: "", type: "string" }],
              stateMutability: "view",
              type: "function",
            },
            {
              inputs: [
                { internalType: "address", name: "investor", type: "address" },
                { internalType: "uint256", name: "amount", type: "uint256" },
              ],
              name: "pay",
              outputs: [],
              stateMutability: "nonpayable",
              type: "function",
            },
            {
              inputs: [{ internalType: "address", name: "newDao", type: "address" }],
              name: "setDao",
              outputs: [],
              stateMutability: "nonpayable",
              type: "function",
            },
            {
              inputs: [],
              name: "symbol",
              outputs: [{ internalType: "string", name: "", type: "string" }],
              stateMutability: "view",
              type: "function",
            },
            {
              inputs: [],
              name: "totalSupply",
              outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
              stateMutability: "view",
              type: "function",
            },
            {
              inputs: [
                { internalType: "address", name: "to", type: "address" },
                { internalType: "uint256", name: "amount", type: "uint256" },
              ],
              name: "transfer",
              outputs: [{ internalType: "bool", name: "", type: "bool" }],
              stateMutability: "nonpayable",
              type: "function",
            },
            {
              inputs: [
                { internalType: "address", name: "from", type: "address" },
                { internalType: "address", name: "to", type: "address" },
                { internalType: "uint256", name: "amount", type: "uint256" },
              ],
              name: "transferFrom",
              outputs: [{ internalType: "bool", name: "", type: "bool" }],
              stateMutability: "nonpayable",
              type: "function",
            },
          ],
        },
        Future: {
          address: "0xd8058efe0198ae9dD7D563e1b4938Dcbc86A1F81",
          abi: [
            {
              inputs: [
                { internalType: "uint256", name: "_kg", type: "uint256" },
                { internalType: "address", name: "_investor", type: "address" },
                { internalType: "uint256", name: "_locktime", type: "uint256" },
              ],
              stateMutability: "nonpayable",
              type: "constructor",
            },
            {
              inputs: [{ internalType: "address", name: "future", type: "address" }],
              name: "BurnContract",
              type: "error",
            },
            {
              inputs: [{ internalType: "uint256", name: "locktime", type: "uint256" }],
              name: "Locktime",
              type: "error",
            },
            { inputs: [], name: "Unauthorized", type: "error" },
            {
              inputs: [{ internalType: "address", name: "investor", type: "address" }],
              name: "ZeroAddress",
              type: "error",
            },
            {
              anonymous: false,
              inputs: [
                { indexed: true, internalType: "uint256", name: "kg", type: "uint256" },
                { indexed: true, internalType: "address", name: "investor", type: "address" },
              ],
              name: "Withdraw",
              type: "event",
            },
            {
              inputs: [],
              name: "burn",
              outputs: [{ internalType: "bool", name: "", type: "bool" }],
              stateMutability: "view",
              type: "function",
            },
            {
              inputs: [],
              name: "dao",
              outputs: [{ internalType: "address", name: "", type: "address" }],
              stateMutability: "view",
              type: "function",
            },
            {
              inputs: [],
              name: "getKg",
              outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
              stateMutability: "view",
              type: "function",
            },
            {
              inputs: [],
              name: "getLockTime",
              outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
              stateMutability: "view",
              type: "function",
            },
            {
              inputs: [],
              name: "investor",
              outputs: [{ internalType: "address", name: "", type: "address" }],
              stateMutability: "view",
              type: "function",
            },
            {
              inputs: [{ internalType: "uint256", name: "amount", type: "uint256" }],
              name: "sell",
              outputs: [{ internalType: "bytes32", name: "", type: "bytes32" }],
              stateMutability: "nonpayable",
              type: "function",
            },
            {
              inputs: [{ internalType: "address", name: "newInvestor", type: "address" }],
              name: "swap",
              outputs: [],
              stateMutability: "nonpayable",
              type: "function",
            },
            { inputs: [], name: "withdraw", outputs: [], stateMutability: "nonpayable", type: "function" },
          ],
        },
      },
    },
  ],
  "80001": [
    {
      name: "maticmum",
      chainId: "80001",
      contracts: {
        ExUSDT: {
          address: "0xfbc80925C65543bBFDe1242d6353cFa4cA3D908E",
          abi: [
            {
              inputs: [
                { internalType: "string", name: "_symbol", type: "string" },
                { internalType: "uint256", name: "initialSupply", type: "uint256" },
                { internalType: "uint8", name: "_decimals", type: "uint8" },
              ],
              stateMutability: "nonpayable",
              type: "constructor",
            },
            {
              anonymous: false,
              inputs: [
                { indexed: true, internalType: "address", name: "owner", type: "address" },
                { indexed: true, internalType: "address", name: "spender", type: "address" },
                { indexed: false, internalType: "uint256", name: "amount", type: "uint256" },
              ],
              name: "Approval",
              type: "event",
            },
            {
              anonymous: false,
              inputs: [
                { indexed: true, internalType: "address", name: "from", type: "address" },
                { indexed: true, internalType: "address", name: "to", type: "address" },
                { indexed: false, internalType: "uint256", name: "amount", type: "uint256" },
              ],
              name: "Transfer",
              type: "event",
            },
            {
              inputs: [
                { internalType: "address", name: "", type: "address" },
                { internalType: "address", name: "", type: "address" },
              ],
              name: "allowance",
              outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
              stateMutability: "view",
              type: "function",
            },
            {
              inputs: [
                { internalType: "address", name: "spender", type: "address" },
                { internalType: "uint256", name: "amount", type: "uint256" },
              ],
              name: "approve",
              outputs: [{ internalType: "bool", name: "", type: "bool" }],
              stateMutability: "nonpayable",
              type: "function",
            },
            {
              inputs: [{ internalType: "address", name: "", type: "address" }],
              name: "balanceOf",
              outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
              stateMutability: "view",
              type: "function",
            },
            {
              inputs: [],
              name: "decimals",
              outputs: [{ internalType: "uint8", name: "", type: "uint8" }],
              stateMutability: "view",
              type: "function",
            },
            {
              inputs: [],
              name: "name",
              outputs: [{ internalType: "string", name: "", type: "string" }],
              stateMutability: "view",
              type: "function",
            },
            {
              inputs: [],
              name: "symbol",
              outputs: [{ internalType: "string", name: "", type: "string" }],
              stateMutability: "view",
              type: "function",
            },
            {
              inputs: [],
              name: "totalSupply",
              outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
              stateMutability: "view",
              type: "function",
            },
            {
              inputs: [
                { internalType: "address", name: "to", type: "address" },
                { internalType: "uint256", name: "amount", type: "uint256" },
              ],
              name: "transfer",
              outputs: [{ internalType: "bool", name: "", type: "bool" }],
              stateMutability: "nonpayable",
              type: "function",
            },
            {
              inputs: [
                { internalType: "address", name: "from", type: "address" },
                { internalType: "address", name: "to", type: "address" },
                { internalType: "uint256", name: "amount", type: "uint256" },
              ],
              name: "transferFrom",
              outputs: [{ internalType: "bool", name: "", type: "bool" }],
              stateMutability: "nonpayable",
              type: "function",
            },
          ],
        },
        Commodity: {
          address: "0xB0932Eee7D34B435429e37B76d4c548dbc42daa7",
          abi: [
            { inputs: [], stateMutability: "nonpayable", type: "constructor" },
            {
              inputs: [{ internalType: "address", name: "future", type: "address" }],
              name: "BurnContract",
              type: "error",
            },
            { inputs: [], name: "Deactivated", type: "error" },
            {
              inputs: [{ internalType: "address", name: "future", type: "address" }],
              name: "FutureNotExists",
              type: "error",
            },
            {
              inputs: [
                { internalType: "uint256", name: "need", type: "uint256" },
                { internalType: "uint256", name: "have", type: "uint256" },
                { internalType: "uint256", name: "diff", type: "uint256" },
              ],
              name: "InsufficientAllowance",
              type: "error",
            },
            {
              inputs: [
                { internalType: "uint256", name: "yourAmount", type: "uint256" },
                { internalType: "uint256", name: "minimumAmount", type: "uint256" },
              ],
              name: "InsufficientAmount",
              type: "error",
            },
            {
              inputs: [{ internalType: "address", name: "token", type: "address" }],
              name: "InvalidToken",
              type: "error",
            },
            {
              inputs: [
                { internalType: "uint8", name: "minimum", type: "uint8" },
                { internalType: "uint8", name: "maximum", type: "uint8" },
              ],
              name: "InvalidYield",
              type: "error",
            },
            { inputs: [], name: "NoReentrancy", type: "error" },
            {
              inputs: [
                { internalType: "uint256", name: "x", type: "uint256" },
                { internalType: "uint256", name: "y", type: "uint256" },
              ],
              name: "PRBMath__MulDiv18Overflow",
              type: "error",
            },
            {
              inputs: [
                { internalType: "uint256", name: "x", type: "uint256" },
                { internalType: "uint256", name: "y", type: "uint256" },
                { internalType: "uint256", name: "denominator", type: "uint256" },
              ],
              name: "PRBMath__MulDivOverflow",
              type: "error",
            },
            {
              inputs: [
                { internalType: "address", name: "from", type: "address" },
                { internalType: "address", name: "to", type: "address" },
                { internalType: "uint256", name: "amount", type: "uint256" },
              ],
              name: "PaymentFailed",
              type: "error",
            },
            {
              inputs: [
                { internalType: "uint256", name: "tokensLength", type: "uint256" },
                { internalType: "uint256", name: "decimalsLength", type: "uint256" },
              ],
              name: "TokensDecimalsLengthError",
              type: "error",
            },
            { inputs: [], name: "Unauthorized", type: "error" },
            {
              inputs: [
                { internalType: "uint256", name: "kilos", type: "uint256" },
                { internalType: "uint256", name: "yourAmount", type: "uint256" },
                { internalType: "uint256", name: "diff", type: "uint256" },
              ],
              name: "UnavailableKilos",
              type: "error",
            },
            {
              inputs: [{ internalType: "address", name: "investor", type: "address" }],
              name: "ZeroAddress",
              type: "error",
            },
            {
              anonymous: false,
              inputs: [
                { indexed: false, internalType: "address", name: "future", type: "address" },
                { indexed: false, internalType: "address", name: "owner", type: "address" },
                { indexed: false, internalType: "uint256", name: "amount", type: "uint256" },
                { indexed: false, internalType: "uint256", name: "locktime", type: "uint256" },
              ],
              name: "FutureCreated",
              type: "event",
            },
            {
              anonymous: false,
              inputs: [
                { indexed: false, internalType: "uint256", name: "amount", type: "uint256" },
                { indexed: false, internalType: "address", name: "investor", type: "address" },
              ],
              name: "TokensMinted",
              type: "event",
            },
            {
              inputs: [
                { internalType: "address", name: "newToken", type: "address" },
                { internalType: "uint8", name: "decimal", type: "uint8" },
              ],
              name: "addTokens",
              outputs: [],
              stateMutability: "nonpayable",
              type: "function",
            },
            {
              inputs: [
                { internalType: "address", name: "tokenAddress", type: "address" },
                { internalType: "uint256", name: "amount", type: "uint256" },
              ],
              name: "createFuture",
              outputs: [
                { internalType: "address", name: "future", type: "address" },
                { internalType: "uint256", name: "kg", type: "uint256" },
              ],
              stateMutability: "nonpayable",
              type: "function",
            },
            {
              inputs: [{ internalType: "address", name: "noauth", type: "address" }],
              name: "delTokens",
              outputs: [],
              stateMutability: "nonpayable",
              type: "function",
            },
            {
              inputs: [],
              name: "getActivated",
              outputs: [{ internalType: "bool", name: "activated", type: "bool" }],
              stateMutability: "view",
              type: "function",
            },
            {
              inputs: [],
              name: "getAllowedTokens",
              outputs: [{ internalType: "address[]", name: "tokens", type: "address[]" }],
              stateMutability: "view",
              type: "function",
            },
            {
              inputs: [],
              name: "getAllowedTokensLength",
              outputs: [{ internalType: "uint256", name: "length", type: "uint256" }],
              stateMutability: "view",
              type: "function",
            },
            {
              inputs: [],
              name: "getBuyPrice",
              outputs: [{ internalType: "uint256", name: "buyPrice", type: "uint256" }],
              stateMutability: "view",
              type: "function",
            },
            {
              inputs: [],
              name: "getCOW",
              outputs: [{ internalType: "contract COW", name: "cow", type: "address" }],
              stateMutability: "view",
              type: "function",
            },
            {
              inputs: [{ internalType: "address", name: "future", type: "address" }],
              name: "getContractByAddress",
              outputs: [
                { internalType: "address", name: "investor", type: "address" },
                { internalType: "address", name: "_future", type: "address" },
                { internalType: "uint256", name: "kg", type: "uint256" },
                { internalType: "bool", name: "burn", type: "bool" },
              ],
              stateMutability: "view",
              type: "function",
            },
            {
              inputs: [{ internalType: "address", name: "investor", type: "address" }],
              name: "getContractsByInvestor",
              outputs: [
                {
                  components: [
                    { internalType: "address", name: "investor", type: "address" },
                    { internalType: "address", name: "future", type: "address" },
                    { internalType: "uint256", name: "commodityAmount", type: "uint256" },
                    { internalType: "bool", name: "burn", type: "bool" },
                  ],
                  internalType: "struct CommodityStorageLib.Contract[]",
                  name: "contractsInvestor",
                  type: "tuple[]",
                },
              ],
              stateMutability: "view",
              type: "function",
            },
            {
              inputs: [],
              name: "getController",
              outputs: [{ internalType: "address", name: "controller", type: "address" }],
              stateMutability: "view",
              type: "function",
            },
            {
              inputs: [],
              name: "getDao",
              outputs: [{ internalType: "address", name: "dao", type: "address" }],
              stateMutability: "view",
              type: "function",
            },
            {
              inputs: [],
              name: "getFullDrawer",
              outputs: [{ internalType: "address[]", name: "drawer", type: "address[]" }],
              stateMutability: "view",
              type: "function",
            },
            {
              inputs: [],
              name: "getLocktime",
              outputs: [{ internalType: "uint256", name: "locktime", type: "uint256" }],
              stateMutability: "view",
              type: "function",
            },
            {
              inputs: [],
              name: "getSellPrice",
              outputs: [{ internalType: "uint256", name: "sellPrice", type: "uint256" }],
              stateMutability: "view",
              type: "function",
            },
            {
              inputs: [],
              name: "getTotalSupplyKG",
              outputs: [{ internalType: "uint256", name: "totalSupplyKg", type: "uint256" }],
              stateMutability: "view",
              type: "function",
            },
            {
              inputs: [],
              name: "getYieldFarming",
              outputs: [{ internalType: "uint256", name: "yieldFarming", type: "uint256" }],
              stateMutability: "view",
              type: "function",
            },
            {
              inputs: [
                { internalType: "address[]", name: "tokens", type: "address[]" },
                { internalType: "uint8[]", name: "decimals", type: "uint8[]" },
                { internalType: "uint256", name: "locktime", type: "uint256" },
                { internalType: "uint256", name: "commoditySupply", type: "uint256" },
                { internalType: "uint256", name: "buyPrice", type: "uint256" },
                { internalType: "uint256", name: "sellPrice", type: "uint256" },
                { internalType: "uint8", name: "yieldFarming", type: "uint8" },
                { internalType: "bool", name: "active", type: "bool" },
                { internalType: "address", name: "dao", type: "address" },
                { internalType: "address", name: "cow", type: "address" },
              ],
              name: "init",
              outputs: [{ internalType: "bool", name: "result", type: "bool" }],
              stateMutability: "nonpayable",
              type: "function",
            },
            {
              inputs: [
                { internalType: "uint256", name: "commodityAmount", type: "uint256" },
                { internalType: "address", name: "investor", type: "address" },
              ],
              name: "mintToken",
              outputs: [],
              stateMutability: "nonpayable",
              type: "function",
            },
            {
              inputs: [{ internalType: "address", name: "newCow", type: "address" }],
              name: "setCOW",
              outputs: [],
              stateMutability: "nonpayable",
              type: "function",
            },
            {
              inputs: [{ internalType: "address", name: "newController", type: "address" }],
              name: "setController",
              outputs: [],
              stateMutability: "nonpayable",
              type: "function",
            },
            {
              inputs: [{ internalType: "address", name: "newDAO", type: "address" }],
              name: "setDAO",
              outputs: [],
              stateMutability: "nonpayable",
              type: "function",
            },
            {
              inputs: [{ internalType: "bool", name: "state", type: "bool" }],
              name: "updateActive",
              outputs: [],
              stateMutability: "nonpayable",
              type: "function",
            },
            {
              inputs: [{ internalType: "uint256", name: "newBuyPrice", type: "uint256" }],
              name: "updateBuyPrice",
              outputs: [],
              stateMutability: "nonpayable",
              type: "function",
            },
            {
              inputs: [{ internalType: "uint256", name: "newLockTime", type: "uint256" }],
              name: "updateLockTime",
              outputs: [],
              stateMutability: "nonpayable",
              type: "function",
            },
            {
              inputs: [{ internalType: "uint256", name: "newSellPrice", type: "uint256" }],
              name: "updateSellPrice",
              outputs: [],
              stateMutability: "nonpayable",
              type: "function",
            },
            {
              inputs: [{ internalType: "uint8", name: "newYieldFarming", type: "uint8" }],
              name: "updateYieldFarming",
              outputs: [],
              stateMutability: "nonpayable",
              type: "function",
            },
          ],
        },
        Diamond: {
          address: "0xB0932Eee7D34B435429e37B76d4c548dbc42daa7",
          abi: [
            { inputs: [], stateMutability: "nonpayable", type: "constructor" },
            {
              inputs: [{ internalType: "bytes4", name: "_selector", type: "bytes4" }],
              name: "CannotAddFunctionToDiamondThatAlreadyExists",
              type: "error",
            },
            {
              inputs: [{ internalType: "address", name: "facetAddress", type: "address" }],
              name: "CannotRemoveImmutableFunction",
              type: "error",
            },
            {
              inputs: [
                { internalType: "address", name: "facetAddress", type: "address" },
                { internalType: "string", name: "debugMessage", type: "string" },
              ],
              name: "FacetZeroAddress",
              type: "error",
            },
            { inputs: [], name: "FnSelectorsEmpty", type: "error" },
            {
              inputs: [{ internalType: "bytes4", name: "fnSelector", type: "bytes4" }],
              name: "FunctionNotFound",
              type: "error",
            },
            {
              inputs: [{ internalType: "uint8", name: "action", type: "uint8" }],
              name: "IncorrectAction",
              type: "error",
            },
            {
              inputs: [
                { internalType: "address", name: "_initializationContractAddress", type: "address" },
                { internalType: "bytes", name: "_calldata", type: "bytes" },
              ],
              name: "InitializationFunctionReverted",
              type: "error",
            },
            { inputs: [], name: "NoAuthorized", type: "error" },
            {
              inputs: [
                { internalType: "address", name: "_contract", type: "address" },
                { internalType: "string", name: "debugMessage", type: "string" },
              ],
              name: "NoBytecodeAtAddress",
              type: "error",
            },
            { inputs: [], name: "ZeroAddress", type: "error" },
            { stateMutability: "payable", type: "fallback" },
            {
              inputs: [
                {
                  components: [
                    { internalType: "address", name: "facetAddress", type: "address" },
                    { internalType: "bytes4[]", name: "fnSelectors", type: "bytes4[]" },
                    { internalType: "enum Action", name: "action", type: "uint8" },
                  ],
                  internalType: "struct Facet[]",
                  name: "_diamondCut",
                  type: "tuple[]",
                },
                { internalType: "address", name: "_init", type: "address" },
                { internalType: "bytes", name: "_calldata", type: "bytes" },
              ],
              name: "diamondCut",
              outputs: [],
              stateMutability: "nonpayable",
              type: "function",
            },
            {
              inputs: [{ internalType: "bytes4", name: "fnSelector", type: "bytes4" }],
              name: "facetAddress",
              outputs: [{ internalType: "address", name: "facetAddress_", type: "address" }],
              stateMutability: "view",
              type: "function",
            },
            {
              inputs: [],
              name: "facetAddresses",
              outputs: [{ internalType: "address[]", name: "facetAddresses_", type: "address[]" }],
              stateMutability: "view",
              type: "function",
            },
            {
              inputs: [{ internalType: "address", name: "facet_", type: "address" }],
              name: "facetFunctionSelectors",
              outputs: [{ internalType: "bytes4[]", name: "fnSelectors", type: "bytes4[]" }],
              stateMutability: "view",
              type: "function",
            },
            {
              inputs: [],
              name: "facets",
              outputs: [
                {
                  components: [
                    { internalType: "address", name: "facetAddress", type: "address" },
                    { internalType: "bytes4[]", name: "fnSelectors", type: "bytes4[]" },
                    { internalType: "enum Action", name: "action", type: "uint8" },
                  ],
                  internalType: "struct Facet[]",
                  name: "facets_",
                  type: "tuple[]",
                },
              ],
              stateMutability: "view",
              type: "function",
            },
            { stateMutability: "payable", type: "receive" },
          ],
        },
        Dex: {
          address: "0xB0932Eee7D34B435429e37B76d4c548dbc42daa7",
          abi: [
            { inputs: [], stateMutability: "nonpayable", type: "constructor" },
            {
              inputs: [{ internalType: "address", name: "future", type: "address" }],
              name: "BurnContract",
              type: "error",
            },
            { inputs: [], name: "FutureAlreadyListed", type: "error" },
            {
              inputs: [{ internalType: "address", name: "future", type: "address" }],
              name: "FutureNotExists",
              type: "error",
            },
            {
              inputs: [
                { internalType: "uint256", name: "need", type: "uint256" },
                { internalType: "uint256", name: "have", type: "uint256" },
                { internalType: "uint256", name: "diff", type: "uint256" },
              ],
              name: "InsufficientAllowance",
              type: "error",
            },
            { inputs: [], name: "InvalidAmount", type: "error" },
            { inputs: [], name: "InvalidCommodityAmount", type: "error" },
            {
              inputs: [
                { internalType: "address", name: "future", type: "address" },
                { internalType: "address", name: "investor", type: "address" },
              ],
              name: "InvalidFutureOwnership",
              type: "error",
            },
            {
              inputs: [
                { internalType: "address", name: "investor", type: "address" },
                { internalType: "bytes32", name: "orderId", type: "bytes32" },
              ],
              name: "InvalidOrderOwnership",
              type: "error",
            },
            {
              inputs: [{ internalType: "address", name: "token", type: "address" }],
              name: "InvalidToken",
              type: "error",
            },
            {
              inputs: [{ internalType: "bytes32", name: "id", type: "bytes32" }],
              name: "OrderNotFound",
              type: "error",
            },
            {
              inputs: [
                { internalType: "address", name: "from", type: "address" },
                { internalType: "address", name: "to", type: "address" },
                { internalType: "uint256", name: "amount", type: "uint256" },
              ],
              name: "PaymentFailed",
              type: "error",
            },
            { inputs: [], name: "SelfTradingError", type: "error" },
            {
              inputs: [{ internalType: "address", name: "investor", type: "address" }],
              name: "ZeroAddress",
              type: "error",
            },
            {
              anonymous: false,
              inputs: [
                { indexed: false, internalType: "bytes32", name: "id", type: "bytes32" },
                { indexed: true, internalType: "uint256", name: "amount", type: "uint256" },
                { indexed: false, internalType: "uint256", name: "commodityAmount", type: "uint256" },
              ],
              name: "BuyOrder",
              type: "event",
            },
            {
              anonymous: false,
              inputs: [
                { indexed: false, internalType: "bytes32", name: "id", type: "bytes32" },
                { indexed: true, internalType: "uint256", name: "amount", type: "uint256" },
                { indexed: false, internalType: "uint256", name: "commodityAmount", type: "uint256" },
                { indexed: false, internalType: "enum DexStorageLib.OrderType", name: "side", type: "uint8" },
              ],
              name: "CancelOrder",
              type: "event",
            },
            {
              anonymous: false,
              inputs: [
                { indexed: false, internalType: "address", name: "oldInvestor", type: "address" },
                { indexed: false, internalType: "address", name: "newInvestor", type: "address" },
                { indexed: false, internalType: "address", name: "future", type: "address" },
                { indexed: true, internalType: "uint256", name: "amount", type: "uint256" },
                { indexed: false, internalType: "uint256", name: "commodityAmount", type: "uint256" },
              ],
              name: "MatchOrder",
              type: "event",
            },
            {
              anonymous: false,
              inputs: [
                { indexed: false, internalType: "bytes32", name: "id", type: "bytes32" },
                { indexed: true, internalType: "address", name: "future", type: "address" },
                { indexed: false, internalType: "uint256", name: "amount", type: "uint256" },
                { indexed: false, internalType: "uint256", name: "commodityAmount", type: "uint256" },
              ],
              name: "SellOrder",
              type: "event",
            },
            {
              inputs: [
                { internalType: "address", name: "tokenAddress", type: "address" },
                { internalType: "uint256", name: "commodityAmount", type: "uint256" },
                { internalType: "uint256", name: "amount", type: "uint256" },
                { internalType: "uint256", name: "randNonce", type: "uint256" },
              ],
              name: "buyOrder",
              outputs: [{ internalType: "bytes32", name: "id", type: "bytes32" }],
              stateMutability: "nonpayable",
              type: "function",
            },
            {
              inputs: [],
              name: "buyOrders",
              outputs: [
                {
                  components: [
                    { internalType: "uint256", name: "commodityAmount", type: "uint256" },
                    { internalType: "uint256", name: "amount", type: "uint256" },
                    { internalType: "address", name: "tokenAddress", type: "address" },
                    { internalType: "address", name: "future", type: "address" },
                    { internalType: "address", name: "investor", type: "address" },
                    { internalType: "enum DexStorageLib.OrderType", name: "typed", type: "uint8" },
                    { internalType: "bytes32", name: "id", type: "bytes32" },
                  ],
                  internalType: "struct DexStorageLib.Order[]",
                  name: "",
                  type: "tuple[]",
                },
              ],
              stateMutability: "view",
              type: "function",
            },
            {
              inputs: [{ internalType: "bytes32", name: "orderId", type: "bytes32" }],
              name: "cancelOrder",
              outputs: [],
              stateMutability: "nonpayable",
              type: "function",
            },
            {
              inputs: [],
              name: "orderBook",
              outputs: [
                {
                  components: [
                    { internalType: "uint256", name: "commodityAmount", type: "uint256" },
                    { internalType: "uint256", name: "amount", type: "uint256" },
                    { internalType: "address", name: "tokenAddress", type: "address" },
                    { internalType: "address", name: "future", type: "address" },
                    { internalType: "address", name: "investor", type: "address" },
                    { internalType: "enum DexStorageLib.OrderType", name: "typed", type: "uint8" },
                    { internalType: "bytes32", name: "id", type: "bytes32" },
                  ],
                  internalType: "struct DexStorageLib.Order[]",
                  name: "",
                  type: "tuple[]",
                },
              ],
              stateMutability: "view",
              type: "function",
            },
            {
              inputs: [
                { internalType: "address", name: "investor", type: "address" },
                { internalType: "uint256", name: "amount", type: "uint256" },
              ],
              name: "sellOrder",
              outputs: [{ internalType: "bytes32", name: "id", type: "bytes32" }],
              stateMutability: "nonpayable",
              type: "function",
            },
            {
              inputs: [],
              name: "sellOrders",
              outputs: [
                {
                  components: [
                    { internalType: "uint256", name: "commodityAmount", type: "uint256" },
                    { internalType: "uint256", name: "amount", type: "uint256" },
                    { internalType: "address", name: "tokenAddress", type: "address" },
                    { internalType: "address", name: "future", type: "address" },
                    { internalType: "address", name: "investor", type: "address" },
                    { internalType: "enum DexStorageLib.OrderType", name: "typed", type: "uint8" },
                    { internalType: "bytes32", name: "id", type: "bytes32" },
                  ],
                  internalType: "struct DexStorageLib.Order[]",
                  name: "",
                  type: "tuple[]",
                },
              ],
              stateMutability: "view",
              type: "function",
            },
          ],
        },
        COW: {
          address: "0x896c65CfB5Bb0Dd5fB99f213cF9B9ba0CDFb04cd",
          abi: [
            { inputs: [], stateMutability: "nonpayable", type: "constructor" },
            {
              anonymous: false,
              inputs: [
                { indexed: true, internalType: "address", name: "owner", type: "address" },
                { indexed: true, internalType: "address", name: "spender", type: "address" },
                { indexed: false, internalType: "uint256", name: "amount", type: "uint256" },
              ],
              name: "Approval",
              type: "event",
            },
            {
              anonymous: false,
              inputs: [
                { indexed: true, internalType: "address", name: "from", type: "address" },
                { indexed: true, internalType: "address", name: "to", type: "address" },
                { indexed: false, internalType: "uint256", name: "amount", type: "uint256" },
              ],
              name: "Transfer",
              type: "event",
            },
            {
              inputs: [
                { internalType: "address", name: "", type: "address" },
                { internalType: "address", name: "", type: "address" },
              ],
              name: "allowance",
              outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
              stateMutability: "view",
              type: "function",
            },
            {
              inputs: [
                { internalType: "address", name: "spender", type: "address" },
                { internalType: "uint256", name: "amount", type: "uint256" },
              ],
              name: "approve",
              outputs: [{ internalType: "bool", name: "", type: "bool" }],
              stateMutability: "nonpayable",
              type: "function",
            },
            {
              inputs: [{ internalType: "address", name: "", type: "address" }],
              name: "balanceOf",
              outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
              stateMutability: "view",
              type: "function",
            },
            {
              inputs: [],
              name: "decimals",
              outputs: [{ internalType: "uint8", name: "", type: "uint8" }],
              stateMutability: "view",
              type: "function",
            },
            {
              inputs: [],
              name: "name",
              outputs: [{ internalType: "string", name: "", type: "string" }],
              stateMutability: "view",
              type: "function",
            },
            {
              inputs: [
                { internalType: "address", name: "investor", type: "address" },
                { internalType: "uint256", name: "amount", type: "uint256" },
              ],
              name: "pay",
              outputs: [],
              stateMutability: "nonpayable",
              type: "function",
            },
            {
              inputs: [{ internalType: "address", name: "newDao", type: "address" }],
              name: "setDao",
              outputs: [],
              stateMutability: "nonpayable",
              type: "function",
            },
            {
              inputs: [],
              name: "symbol",
              outputs: [{ internalType: "string", name: "", type: "string" }],
              stateMutability: "view",
              type: "function",
            },
            {
              inputs: [],
              name: "totalSupply",
              outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
              stateMutability: "view",
              type: "function",
            },
            {
              inputs: [
                { internalType: "address", name: "to", type: "address" },
                { internalType: "uint256", name: "amount", type: "uint256" },
              ],
              name: "transfer",
              outputs: [{ internalType: "bool", name: "", type: "bool" }],
              stateMutability: "nonpayable",
              type: "function",
            },
            {
              inputs: [
                { internalType: "address", name: "from", type: "address" },
                { internalType: "address", name: "to", type: "address" },
                { internalType: "uint256", name: "amount", type: "uint256" },
              ],
              name: "transferFrom",
              outputs: [{ internalType: "bool", name: "", type: "bool" }],
              stateMutability: "nonpayable",
              type: "function",
            },
          ],
        },
        Future: {
          address: "0xd8058efe0198ae9dD7D563e1b4938Dcbc86A1F81",
          abi: [
            {
              inputs: [
                { internalType: "uint256", name: "_kg", type: "uint256" },
                { internalType: "address", name: "_investor", type: "address" },
                { internalType: "uint256", name: "_locktime", type: "uint256" },
              ],
              stateMutability: "nonpayable",
              type: "constructor",
            },
            {
              inputs: [{ internalType: "address", name: "future", type: "address" }],
              name: "BurnContract",
              type: "error",
            },
            {
              inputs: [{ internalType: "uint256", name: "locktime", type: "uint256" }],
              name: "Locktime",
              type: "error",
            },
            { inputs: [], name: "Unauthorized", type: "error" },
            {
              inputs: [{ internalType: "address", name: "investor", type: "address" }],
              name: "ZeroAddress",
              type: "error",
            },
            {
              anonymous: false,
              inputs: [
                { indexed: true, internalType: "uint256", name: "kg", type: "uint256" },
                { indexed: true, internalType: "address", name: "investor", type: "address" },
              ],
              name: "Withdraw",
              type: "event",
            },
            {
              inputs: [],
              name: "burn",
              outputs: [{ internalType: "bool", name: "", type: "bool" }],
              stateMutability: "view",
              type: "function",
            },
            {
              inputs: [],
              name: "dao",
              outputs: [{ internalType: "address", name: "", type: "address" }],
              stateMutability: "view",
              type: "function",
            },
            {
              inputs: [],
              name: "getKg",
              outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
              stateMutability: "view",
              type: "function",
            },
            {
              inputs: [],
              name: "getLockTime",
              outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
              stateMutability: "view",
              type: "function",
            },
            {
              inputs: [],
              name: "investor",
              outputs: [{ internalType: "address", name: "", type: "address" }],
              stateMutability: "view",
              type: "function",
            },
            {
              inputs: [{ internalType: "uint256", name: "amount", type: "uint256" }],
              name: "sell",
              outputs: [{ internalType: "bytes32", name: "", type: "bytes32" }],
              stateMutability: "nonpayable",
              type: "function",
            },
            {
              inputs: [{ internalType: "address", name: "newInvestor", type: "address" }],
              name: "swap",
              outputs: [],
              stateMutability: "nonpayable",
              type: "function",
            },
            { inputs: [], name: "withdraw", outputs: [], stateMutability: "nonpayable", type: "function" },
          ],
        },
      },
    },
  ],
} as const;

export default deployedContracts;
